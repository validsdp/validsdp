# Makefile for ValidSDP

COQ_PROJ := _CoqProject
COQ_MAKEFILE := Makefile.coq
COQ_MAKE := +$(MAKE) -f $(COQ_MAKEFILE)

ifneq "$(COQBIN)" ""
	COQBIN := $(COQBIN)/
else
	COQBIN := $(dir $(shell which coqc))
endif
export COQBIN

PLUGDIR := plugins/soswitness

MODULE_SDPA := $(PLUGDIR)/test-suite/soswitnesstac_sdpa.v

ifeq (@SDPA_AVAILABLE@,true)
MODULES := $(MODULE_SDPA)
else
MODULES :=
endif

all plugin test install html gallinahtml doc deps.dot deps.png: $(COQ_MAKEFILE) Makefile
	$(COQ_MAKE) $@

# This rule could be moved to Makefile.coq.local
$(PLUGDIR)/src/soswitness.@COQPP_EXT@: $(PLUGDIR)/src/soswitness_@COQ_VERSION@.@COQPP_EXT@
	$(RM) $@
	cp -f -- $< $@
	chmod a-w $@

%.vo: %.v
	$(COQ_MAKE) $@

$(COQ_MAKEFILE): $(COQ_PROJ) $(MODULES) $(PLUGDIR)/src/soswitness.@COQPP_EXT@
	@ocamlfind query zarith >/dev/null
	@ocamlfind query ocplib-simplex >/dev/null
	@ocamlfind query osdp >/dev/null
	$(COQBIN)coq_makefile \
		-I "$(shell ocamlfind query zarith)" \
		-I "$(shell ocamlfind query ocplib-simplex)" \
		-I "$(shell ocamlfind query osdp)" \
		-f $< $(MODULES) -o $@
	# FIXME: This sed hack is fragile (if we do "make -B" for example)
	sed -e 's/-linkall -shared -o $$@ $$</-linkall -shared -o $$@ zarith.cmxa ocplibSimplex.cmxa osdp.cmxa $$</' -i $@

clean:
	-$(COQ_MAKE) clean
	$(RM) depend depend.dot depend.png depend.map
	$(RM) $(PLUGDIR)/src/soswitness.@COQPP_EXT@
	$(RM) theories/testsuite.vo theories/testsuite.glob

distclean: clean
	$(RM) -r autom4te.cache
	$(RM) config.log config.status configure
	$(RM) _CoqProject Makefile
	$(RM) $(COQ_MAKEFILE) $(COQ_MAKEFILE).conf
	$(RM) $(PLUGDIR)/theories/soswitness.v

FILES = AUTHORS LICENSE Makefile.in Makefile.coq.local _CoqProject.in\
  README.md coq-validsdp.opam\
  install_sdpa_on_debian_10.sh

# This must be disabled to cope with the distributed (stable) tarballs
# configure: configure.ac
# 	./autogen.sh

Makefile: Makefile.in configure
	./configure

_CoqProject: _CoqProject.in configure | Makefile
#	./configure

# Create a tarball dist.YYYY-MM-DD.XXX/validsdp-a.b.c.tar.gz
# containing validsdp-a.b.c/ with $(FILES), configure, and the
# git-archive export of dirs {theories,test-suite,$(PLUGDIR)}
dist: configure
	@echo Exporting files from: $$(git describe --all --long --abbrev=40 --always --dirty)
	export T=$$(readlink -f $$(mktemp -d dist.$$(date -I).XXX)) && export S=@PACKAGE_TARNAME@-@PACKAGE_VERSION@ && mkdir -p $$T/$$S && rsync -rlpgoDvR $(FILES) $^ $$T/$$S && for dir in theories test-suite $(PLUGDIR); do git archive --format=tar HEAD -- $$dir | (mkdir -p $$T/$$S/$$dir && cd $$T/$$S && tar xf -); done && (cd $$T && tar cvzf $$S.tar.gz $$S); echo '\n'See $$T/'\n'

help:
	@echo $(SOSWITNESS_DIR)
	@echo "You can run:"
	@echo "    'make' to build ValidSDP"
	@echo "    'make plugin' to only build the soswitness plugin"
	@echo "    'make install' to install ValidSDP"
	@echo "    'make test' to run several tests"
	@echo "    'make doc' to build the documentation of the library"
	@echo "    'make clean' to remove generated files"
	@echo "    'make distclean' to remove all generated files"
	@echo "    'make dist' to prepare a tarball release"

.PHONY: all plugin test install html gallinahtml doc help clean distclean dist
