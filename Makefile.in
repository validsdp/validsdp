# Makefile for ValidSDP

all::
	@echo "You can run:"
	@echo "    'make external' to build and install extra Coq dependencies"
	@echo "    'make install' to build and install ValidSDP"
	@echo "    'make clean' to remove all generated files"
	@echo "    'make dist' to prepare an archive for distribution"

DIST1 = dist1
DIST2 = dist2
FILES = AUTHORS README.md configure Makefile.in

external::
	@if test -r .gitmodules; then \
		echo Retrieving external dependencies...; \
		echo git submodule update --init; \
		git submodule update --init; \
		echo; \
	fi
	@echo Installing external dependencies...
	( cd external/paramcoq_@COQ_VERSION@ && $(MAKE) && $(MAKE) install )
	( cd external/CoqEAL/theory && $(MAKE) && $(MAKE) install )
	if test @COQ_VERSION@ = v86 ; then \
		sed -e 's/ Bignums.BigQ.BigQ.\([^a-zA-Z_]\|$$\)/ BigQ.\1/' -i external/CoqEAL/refinements/binrat.v; \
	else \
		sed -e 's/ BigQ.\([^a-zA-Z_]\|$$\)/ Bignums.BigQ.BigQ.\1/' -i external/CoqEAL/refinements/binrat.v; \
	fi
	( cd external/CoqEAL/refinements && $(MAKE) && $(MAKE) install )

install::
	$(MAKE) -C plugins/soswitness
	$(MAKE) -C plugins/soswitness install
	$(MAKE) -C theories
	$(MAKE) -C theories install

clean::
	([ -f external/paramcoq/Makefile ] && $(MAKE) -C external/paramcoq clean )
	([ -f external/CoqEAL/theory/Makefile ] && $(MAKE) -C external/CoqEAL/theory clean )
	([ -f external/CoqEAL/refinements/Makefile ] && $(MAKE) -C external/CoqEAL/refinements clean )
	$(MAKE) -C plugins/soswitness clean
	$(MAKE) -C theories clean

dist::
	autoreconf
	$(MAKE) -C plugins/soswitness dist
	$(MAKE) -C theories dist
	export T=$$(readlink -f $$(mktemp -d dist.XXX)) && export S=@PACKAGE_TARNAME@-@PACKAGE_VERSION@ && mkdir -p $$T/$$S && rsync -rlpgoDvR $(FILES) $$T/$$S && rsync -rlpgoDv $$(readlink $(DIST1))/ $$(readlink $(DIST2))/ $$T/$$S && git submodule foreach 'git archive --format=tar HEAD | (mkdir -p $$T/$$S/$$path && cd $$T/$$S/$$path && tar xf -)' && rm -fr $$T/$$S/external/CoqEAL/{v0.1,0.2,release}; (cd $$T && tar cvzf $$S.tar.gz $$S); echo '\n'See $$T/'\n'
	$(RM) -r $$(readlink $(DIST1)) $$(readlink $(DIST2))
	$(RM) $(DIST1) $(DIST2)
