# Makefile for ValidSDP

COQ_PROJ := _CoqProject
COQ_MAKEFILE := Makefile.coq
COQ_MAKE := +$(MAKE) -f $(COQ_MAKEFILE)

ifneq "$(COQBIN)" ""
	COQBIN := $(COQBIN)/
else
	COQBIN := $(dir $(shell which coqc))
endif
export COQBIN

PLUGDIR := plugins/soswitness

MODULE_SDPA := $(PLUGDIR)/test-suite/soswitnesstac_sdpa.v

ifeq (@SDPA_AVAILABLE@,true)
MODULES := $(MODULE_SDPA)
else
MODULES :=
endif

all test install html gallinahtml doc deps.dot deps.png: $(COQ_MAKEFILE)
	$(COQ_MAKE) $@

# This rule could be moved to Makefile.coq.local
$(PLUGDIR)/src/soswitness.@COQPP_EXT@: $(PLUGDIR)/src/soswitness_@COQ_VERSION@.@COQPP_EXT@
	$(RM) $@
	cp -f -- $< $@
	chmod a-w $@

%.vo: %.v
	$(COQ_MAKE) $@

$(COQ_MAKEFILE): $(COQ_PROJ) $(MODULES) $(PLUGDIR)/src/soswitness.@COQPP_EXT@
	@ocamlfind query zarith >/dev/null
	@ocamlfind query ocplib-simplex >/dev/null
	@ocamlfind query osdp >/dev/null
	$(COQBIN)coq_makefile \
		-I "$(shell ocamlfind query zarith)" \
		-I "$(shell ocamlfind query ocplib-simplex)" \
		-I "$(shell ocamlfind query osdp)" \
		-f $< $(MODULES) -o $@
	# FIXME: This sed hack is fragile (if we do "make -B" for example)
	sed -e 's/-linkall -shared -o $$@ $$</-linkall -shared -o $$@ zarith.cmxa ocplibSimplex.cmxa osdp.cmxa $$</' -i $@

clean:
	-$(COQ_MAKE) clean
	$(RM) depend depend.dot depend.png depend.map
	$(RM) theories/testsuite.vo theories/testsuite.glob

distclean: clean
	$(RM) -r autom4te.cache
	$(RM) config.log config.status configure
	$(RM) _CoqProject Makefile Makefile.coq.conf
	$(RM) $(COQ_MAKEFILE) $(PLUGDIR)/src/soswitness.@COQPP_EXT@
	$(RM) $(PLUGDIR)/theories/soswitness.v

help:
	@echo $(SOSWITNESS_DIR)
	@echo "You can run:"
	@echo "    'make' to build ValidSDP"
	@echo "    'make install' to install ValidSDP"
	@echo "    'make test' to run several tests"
	@echo "    'make doc' to build the documentation of the library"
	@echo "    'make clean' to remove generated files"
	@echo "    'make distclean' to remove all generated files"

.PHONY: all clean distclean test install html gallinahtml doc help
