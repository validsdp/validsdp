From mathcomp Require Import ssreflect.
Require Import Reals.
From Interval Require Import Interval_tactic.
From ValidSDP Require Import validsdp.

Local Open Scope R_scope.

Let p (x0 x1 x2 x3 x4 x5 : R) :=
  0
  - (x0 * x3 * (0 - x0 + x1 + x2 - x3 + x4 + x5)
     + x1 * x4 * (x0 - x1 + x2 + x3 - x4 + x5)
     + x2 * x5 * (x0 + x1 - x2 + x3 + x4 - x5) - x1 * x2 * x3 - x0 * x2 * x4
     - x0 * x1 * x5 - x3 * x4 * x5).

Let p' (x0 x1 x2 x3 x4 x5 : R) :=
  -60
  + x0 * x3 * (0 - x0 + x1 + x2 - x3 + x4 + x5)
    + x1 * x4 * (x0 - x1 + x2 + x3 - x4 + x5)
    + x2 * x5 * (x0 + x1 - x2 + x3 + x4 - x5) - x1 * x2 * x3 - x0 * x2 * x4
    - x0 * x1 * x5 - x3 * x4 * x5.

Let p'' (x0 x1 x2 x3 x4 x5 : R) :=
  (0 - x1) * x2 - x0 * x3 + x1 * x4 + x2 * x5 - x4 * x5
  + x0 * (0 - x0 + x1 + x2 - x3 + x4 + x5).

Let b1 (x0 x1 x2 x3 x4 x5 : R) :=
  (x0 - 606887582536/100000000000) * (702674064/100000000 - x0).

Let b2 (x0 x1 x2 x3 x4 x5 : R) :=
  (x1 - 4) * (8 - x1).

Let b3 (x0 x1 x2 x3 x4 x5 : R) :=
  (x2 - 4) * (8 - x2).

Let b4 (x0 x1 x2 x3 x4 x5 : R) :=
  (x3 - 4) * (702674064/100000000 - x3).

Let b5 (x0 x1 x2 x3 x4 x5 : R) :=
  (x4 - 4) * (8 - x4).

Let b6 (x0 x1 x2 x3 x4 x5 : R) :=
  (x5 - 4) * (8 - x5).

Let sigma (x0 x1 x2 x3 x4 x5 : R) :=
  1709718276875939/1099511627776.

Let sigma' (x0 x1 x2 x3 x4 x5 : R) :=
  1179016922919817/34359738368.

Let sigma'' (x0 x1 x2 x3 x4 x5 : R) :=
  2799029481309093/274877906944 + -779917412884305/1099511627776 * x0
  + -321097618833061/549755813888 * x1 + -321097618833057/549755813888 * 
  x2 + -478443026469877/549755813888 * x3
  + -160548809416529/274877906944 * x4 + -321097618833059/549755813888 * 
  x5 + 2909903705655551/1099511627776 * x0^2
  + -121997068904865/549755813888 * x0 * x1
  + 2046948745328865/549755813888 * x1^2
  + -30499267226213/137438953472 * x0 * x2
  + -369085291950607/137438953472 * x1 * x2
  + 2046948745328877/549755813888 * x2^2
  + -4992721299066033/1099511627776 * x0 * x3
  + -1465141693044935/1099511627776 * x1 * x3
  + -732570846522503/549755813888 * x2 * x3
  + 262245459717901/68719476736 * x3^2
  + -121997068904857/549755813888 * x0 * x4
  + 25078366316877/549755813888 * x1 * x4
  + -1466716974513045/1099511627776 * x2 * x4
  + -1465141693044983/1099511627776 * x3 * x4
  + 2046948745328885/549755813888 * x4^2
  + -30499267226213/137438953472 * x0 * x5
  + -183339621814127/137438953472 * x1 * x5
  + 25078366316875/549755813888 * x2 * x5
  + -732570846522501/549755813888 * x3 * x5
  + -369085291950609/137438953472 * x4 * x5
  + 2046948745328889/549755813888 * x5^2.

Let sigma1 (x0 x1 x2 x3 x4 x5 : R) :=
  6315508284218993/549755813888 + 5159509542638261/1099511627776 * x0
  + 7082423379261/274877906944 * x1 + 14164846758517/549755813888 * x2
  + 181525542219277/549755813888 * x3 + 7082423379259/274877906944 * 
  x4 + 14164846758513/549755813888 * x5
  + 5096862492310483/549755813888 * x0^2
  + -1178387601891317/1099511627776 * x0 * x1
  + 3408976688558737/549755813888 * x1^2
  + -147298450236421/137438953472 * x0 * x2
  + 188798670942599/274877906944 * x1 * x2
  + 6817953377117473/1099511627776 * x2^2
  + -68463770020259/549755813888 * x0 * x3
  + 176742954257283/274877906944 * x1 * x3
  + 353485908514563/549755813888 * x2 * x3
  + 3118280888704913/549755813888 * x3^2
  + -589193800945683/549755813888 * x0 * x4
  + 351514937990969/549755813888 * x1 * x4
  + 177287539430267/549755813888 * x2 * x4
  + 706971817029161/1099511627776 * x3 * x4
  + 3408976688558739/549755813888 * x4^2
  + -589193800945695/549755813888 * x0 * x5
  + 177287539430263/549755813888 * x1 * x5
  + 703029875981937/1099511627776 * x2 * x5
  + 706971817029125/1099511627776 * x3 * x5
  + 94399335471301/137438953472 * x4 * x5
  + 1704488344279371/274877906944 * x5^2.

Let sigma2 (x0 x1 x2 x3 x4 x5 : R) :=
  3054760154894189/274877906944 + -340831393112423/549755813888 * x0
  + 1443415748796153/549755813888 * x1 + -80833305004851/274877906944 * 
  x2 + -361497956240483/549755813888 * x3
  + -280663219598577/549755813888 * x4 + -251030536081813/549755813888 * 
  x5 + 3189032193161375/549755813888 * x0^2
  + -1932226640942965/549755813888 * x0 * x1
  + 8091246234275823/1099511627776 * x1^2
  + -1246270810727279/1099511627776 * x0 * x2
  + -1641963855721213/1099511627776 * x1 * x2
  + 413630815339625/68719476736 * x2^2
  + -146811527727325/137438953472 * x0 * x3
  + -1719761949117865/549755813888 * x1 * x3
  + -305715624022231/274877906944 * x2 * x3
  + 3121159075274007/549755813888 * x3^2
  + -561772210715337/549755813888 * x0 * x4
  + -3068505772465327/1099511627776 * x1 * x4
  + -14152049007503/34359738368 * x2 * x4
  + -867694182028183/1099511627776 * x3 * x4
  + 6695466101690445/1099511627776 * x4^2
  + -1743799175658311/1099511627776 * x0 * x5
  + -74172183677579/34359738368 * x1 * x5
  + -794475390179861/1099511627776 * x2 * x5
  + -605966512696519/549755813888 * x3 * x5
  + -134603951398817/549755813888 * x4 * x5
  + 104338120791081/17179869184 * x5^2.

Let sigma3 (x0 x1 x2 x3 x4 x5 : R) :=
  3054760154894191/274877906944 + -340831393112389/549755813888 * x0
  + -80833305004841/274877906944 * x1 + 45106742149881/17179869184 * 
  x2 + -361497956240447/549755813888 * x3
  + -251030536081787/549755813888 * x4 + -280663219598549/549755813888 * 
  x5 + 3189032193161397/549755813888 * x0^2
  + -623135405363629/549755813888 * x0 * x1
  + 3309046522717003/549755813888 * x1^2
  + -966113320471443/274877906944 * x0 * x2
  + -820981927860573/549755813888 * x1 * x2
  + 8091246234275913/1099511627776 * x2^2
  + -1174492221818477/1099511627776 * x0 * x3
  + -611431248044435/549755813888 * x1 * x3
  + -3439523898235591/1099511627776 * x2 * x3
  + 48768110551157/8589934592 * x3^2
  + -435949793914567/274877906944 * x0 * x4
  + -794475390179867/1099511627776 * x1 * x4
  + -1186754938841233/549755813888 * x2 * x4
  + -151491628174127/137438953472 * x3 * x4
  + 834704966328651/137438953472 * x4^2
  + -1123544421430601/1099511627776 * x0 * x5
  + -226432784120019/549755813888 * x1 * x5
  + -767126443116305/274877906944 * x2 * x5
  + -433847091014049/549755813888 * x3 * x5
  + -134603951398795/549755813888 * x4 * x5
  + 3347733050845245/549755813888 * x5^2.

Let sigma4 (x0 x1 x2 x3 x4 x5 : R) :=
  1521683284205385/137438953472 + -165295850411443/549755813888 * x0
  + -219105756099847/549755813888 * x1 + -219105756099849/549755813888 * 
  x2 + 1486100521877083/549755813888 * x3
  + -109552878049923/274877906944 * x4 + -27388219512481/68719476736 * 
  x5 + 706784661226763/137438953472 * x0^2
  + -2086781638099275/1099511627776 * x0 * x1
  + 6943360616832493/1099511627776 * x1^2
  + -2086781638099199/1099511627776 * x0 * x2
  + -961744605343761/1099511627776 * x1 * x2
  + 867920077104063/137438953472 * x2^2
  + -419296673697859/274877906944 * x0 * x3
  + -2315487673293377/1099511627776 * x1 * x3
  + -1157743836646673/549755813888 * x2 * x3
  + 4562107720953565/549755813888 * x3^2
  + -1043390819049587/549755813888 * x0 * x4
  + -1038314250378921/1099511627776 * x1 * x4
  + -1089890062241789/1099511627776 * x2 * x4
  + -1157743836646657/549755813888 * x3 * x4
  + 433960038552033/68719476736 * x4^2
  + -521695409524803/274877906944 * x0 * x5
  + -34059064445057/34359738368 * x1 * x5
  + -519157125189457/549755813888 * x2 * x5
  + -578871918323339/274877906944 * x3 * x5
  + -961744605343763/1099511627776 * x4 * x5
  + 867920077104065/137438953472 * x5^2.

Let sigma5 (x0 x1 x2 x3 x4 x5 : R) :=
  190922509680887/17179869184 + -85207848278099/137438953472 * x0
  + -280663219598559/549755813888 * x1 + -125515268040897/274877906944 * 
  x2 + -180748978120229/274877906944 * x3
  + 1443415748796183/549755813888 * x4 + -161666610009685/549755813888 * 
  x5 + 3189032193161411/549755813888 * x0^2
  + -1123544421430673/1099511627776 * x0 * x1
  + 6695466101690429/1099511627776 * x1^2
  + -435949793914569/274877906944 * x0 * x2
  + -67301975699407/274877906944 * x1 * x2
  + 834704966328651/137438953472 * x2^2
  + -293623055454633/274877906944 * x0 * x3
  + -108461772753521/137438953472 * x1 * x3
  + -302983256348261/274877906944 * x2 * x3
  + 1560579537637013/274877906944 * x3^2
  + -3864453281885827/1099511627776 * x0 * x4
  + -767126443116317/274877906944 * x1 * x4
  + -593377469420621/274877906944 * x2 * x4
  + -13435640227483/4294967296 * x3 * x4 + 505702889642243/68719476736 * 
  x4^2 + -311567702681805/274877906944 * x0 * x5
  + -226432784120029/549755813888 * x1 * x5
  + -397237695089919/549755813888 * x2 * x5
  + -1222862496088883/1099511627776 * x3 * x5
  + -820981927860581/549755813888 * x4 * x5
  + 6618093045434019/1099511627776 * x5^2.

Let sigma6 (x0 x1 x2 x3 x4 x5 : R) :=
  3054760154894195/274877906944 + -170415696556191/274877906944 * x0
  + -251030536081789/549755813888 * x1 + -140331609799273/274877906944 * 
  x2 + -722995912480889/1099511627776 * x3
  + -40416652502419/137438953472 * x4 + 2886831497592391/1099511627776 * 
  x5 + 3189032193161407/549755813888 * x0^2
  + -435949793914579/274877906944 * x0 * x1
  + 1669409932657295/274877906944 * x1^2
  + -561772210715295/549755813888 * x0 * x2
  + -8412746962425/34359738368 * x1 * x2
  + 3347733050845243/549755813888 * x2^2
  + -587246110909241/549755813888 * x0 * x3
  + -605966512696503/549755813888 * x1 * x3
  + -216923545507023/274877906944 * x2 * x3
  + 6242318150548085/1099511627776 * x3^2
  + -623135405363597/549755813888 * x0 * x4
  + -794475390179861/1099511627776 * x1 * x4
  + -14152049007501/34359738368 * x2 * x4
  + -611431248044437/549755813888 * x3 * x4
  + 413630815339627/68719476736 * x4^2
  + -483056660235719/137438953472 * x0 * x5
  + -296688734710309/137438953472 * x1 * x5
  + -1534252886232595/549755813888 * x2 * x5
  + -429940487279447/137438953472 * x3 * x5
  + -205245481965141/137438953472 * x4 * x5
  + 2022811558568979/274877906944 * x5^2.

Lemma relax_pos (x0 x1 x2 x3 x4 x5 : R) :
  sigma x0 x1 x2 x3 x4 x5 * p x0 x1 x2 x3 x4 x5
  + sigma' x0 x1 x2 x3 x4 x5 * p' x0 x1 x2 x3 x4 x5
  + sigma'' x0 x1 x2 x3 x4 x5 * p'' x0 x1 x2 x3 x4 x5
  - sigma1 x0 x1 x2 x3 x4 x5 * b1 x0 x1 x2 x3 x4 x5
  - sigma2 x0 x1 x2 x3 x4 x5 * b2 x0 x1 x2 x3 x4 x5
  - sigma3 x0 x1 x2 x3 x4 x5 * b3 x0 x1 x2 x3 x4 x5
  - sigma4 x0 x1 x2 x3 x4 x5 * b4 x0 x1 x2 x3 x4 x5
  - sigma5 x0 x1 x2 x3 x4 x5 * b5 x0 x1 x2 x3 x4 x5
  - sigma6 x0 x1 x2 x3 x4 x5 * b6 x0 x1 x2 x3 x4 x5 > 0.
Proof.
rewrite /sigma /p /sigma' /p' /sigma'' /p'' /sigma1 /b1 /sigma2 /b2 /sigma3 /b3 /sigma4 /b4 /sigma5 /b5 /sigma6 /b6.
validsdp.
Qed.

Lemma sigma_pos (x0 x1 x2 x3 x4 x5 : R) : sigma x0 x1 x2 x3 x4 x5 > 0.
Proof. rewrite /sigma. interval. Qed.

Lemma sigma'_pos (x0 x1 x2 x3 x4 x5 : R) : sigma' x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma'. interval. Qed.

Lemma sigma''_pos (x0 x1 x2 x3 x4 x5 : R) : sigma'' x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma''. validsdp. Qed.

Lemma sigma1_pos (x0 x1 x2 x3 x4 x5 : R) : sigma1 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma1. validsdp. Qed.

Lemma sigma2_pos (x0 x1 x2 x3 x4 x5 : R) : sigma2 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma2. validsdp. Qed.

Lemma sigma3_pos (x0 x1 x2 x3 x4 x5 : R) : sigma3 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma3. validsdp. Qed.

Lemma sigma4_pos (x0 x1 x2 x3 x4 x5 : R) : sigma4 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma4. validsdp. Qed.

Lemma sigma5_pos (x0 x1 x2 x3 x4 x5 : R) : sigma5 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma5. validsdp. Qed.

Lemma sigma6_pos (x0 x1 x2 x3 x4 x5 : R) : sigma6 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma6. validsdp. Qed.

Lemma var_bounds (x l u : R) : l <= x <= u -> (x - l) * (u - x) >= 0.
Proof.
move=> [Hl Hu].
apply Rle_ge.
by apply Interval_missing.Rmult_le_pos_pos; apply Fcore_Raux.Rle_0_minus.
Qed.

Lemma relax (x y z : R) : x >= 0 -> y >= 0 -> z - x * y > 0 -> z > 0.
Proof.
move=> HX Hy.
apply Rge_gt_trans, Rle_ge.
rewrite -{2}(Rminus_0_r z).
apply Rplus_le_compat_l, Ropp_le_contravar.
by apply Interval_missing.Rmult_le_pos_pos; apply Rge_le.
Qed.
  
Lemma relax' (x y z : R) : x >= 0 -> y <= 0 -> z + x * y > 0 -> z > 0.
Proof.
move=> HX Hy.
apply Rge_gt_trans, Rle_ge.
rewrite -{2}(Rplus_0_r z) Rmult_comm.
by apply Rplus_le_compat_l, Interval_missing.Rmult_le_neg_pos; [|apply Rge_le].
Qed.
  
Theorem p_pos (x0 x1 x2 x3 x4 x5 x6 : R) :
  606887582536 / 100000000000 <= x0 <= 702674064 / 100000000 ->
  4 <= x1 <= 8 ->
  4 <= x2 <= 8 ->
  4 <= x3 <= 702674064 / 100000000 ->
  4 <= x4 <= 8 ->
  4 <= x5 <= 8 ->
  (p x0 x1 x2 x3 x4 x5 > 0 \/ p' x0 x1 x2 x3 x4 x5 > 0 \/ p'' x0 x1 x2 x3 x4 x5 > 0).
Proof.
move=> H1 H2 H3 H4 H5 H6.
have Hb0 : b1 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb1 : b2 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb2 : b3 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb3 : b4 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb4 : b5 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb5 : b6 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
elim (Rlt_or_le R0 (p' x0 x1 x2 x3 x4 x5))=> Hp'; [by right; left|].
elim (Rlt_or_le R0 (p'' x0 x1 x2 x3 x4 x5))=> Hp''; [by right; right|].
left.
apply (Rmult_lt_reg_l (sigma x0 x1 x2 x3 x4 x5)); [by apply sigma_pos|].
rewrite Rmult_0_r.
apply (relax' _ _ _ (sigma'_pos x0 x1 x2 x3 x4 x5) Hp').
apply (relax' _ _ _ (sigma''_pos x0 x1 x2 x3 x4 x5) Hp'').
apply (relax _ _ _ (sigma1_pos x0 x1 x2 x3 x4 x5) Hb0).
apply (relax _ _ _ (sigma2_pos x0 x1 x2 x3 x4 x5) Hb1).
apply (relax _ _ _ (sigma3_pos x0 x1 x2 x3 x4 x5) Hb2).
apply (relax _ _ _ (sigma4_pos x0 x1 x2 x3 x4 x5) Hb3).
apply (relax _ _ _ (sigma5_pos x0 x1 x2 x3 x4 x5) Hb4).
apply (relax _ _ _ (sigma6_pos x0 x1 x2 x3 x4 x5) Hb5).
apply relax_pos.
Qed.
