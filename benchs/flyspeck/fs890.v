From mathcomp Require Import ssreflect.
Require Import Reals.
From Interval Require Import Interval_tactic.
From ValidSDP Require Import validsdp.

Local Open Scope R_scope.

Let p (x0 x1 x2 x3 x4 x5 : R) :=
  0
  - (x0 * x3 * (0 - x0 + x1 + x2 - x3 + x4 + x5)
     + x1 * x4 * (x0 - x1 + x2 + x3 - x4 + x5)
     + x2 * x5 * (x0 + x1 - x2 + x3 + x4 - x5) - x1 * x2 * x3 - x0 * x2 * x4
     - x0 * x1 * x5 - x3 * x4 * x5).

Let p' (x0 x1 x2 x3 x4 x5 : R) :=
  0
  - (x0
     * (x0 * x3 * (0 - x0 + x1 + x2 - x3 + x4 + x5)
        + x1 * x4 * (x0 - x1 + x2 + x3 - x4 + x5)
        + x2 * x5 * (x0 + x1 - x2 + x3 + x4 - x5) - x1 * x2 * x3
        - x0 * x2 * x4 - x0 * x1 * x5 - x3 * x4 * x5)
     * 4
     + ((0 - x1) * x2 - x0 * x3 + x1 * x4 + x2 * x5 - x4 * x5
        + x0 * (0 - x0 + x1 + x2 - x3 + x4 + x5))
       * ((0 - x1) * x2 - x0 * x3 + x1 * x4 + x2 * x5 - x4 * x5
          + x0 * (0 - x0 + x1 + x2 - x3 + x4 + x5))
       * -243621/100000).

Let b1 (x0 x1 x2 x3 x4 x5 : R) :=
  (x0 - 4) * (63504/10000 - x0).

Let b2 (x0 x1 x2 x3 x4 x5 : R) :=
  (x1 - 4) * (63504/10000 - x1).

Let b3 (x0 x1 x2 x3 x4 x5 : R) :=
  (x2 - 4) * (63504/10000 - x2).

Let b4 (x0 x1 x2 x3 x4 x5 : R) :=
  (x3 - 4) * (4 - x3).

Let b5 (x0 x1 x2 x3 x4 x5 : R) :=
  (x4 - 4) * (4 - x4).

Let b6 (x0 x1 x2 x3 x4 x5 : R) :=
  (x5 - 90601/10000) * (104721490449/10000000000 - x5).

Let sigma (x0 x1 x2 x3 x4 x5 : R) :=
  2819000466393/68719476736.

Let sigma' (x0 x1 x2 x3 x4 x5 : R) :=
  79271742055739/68719476736.

Let sigma1 (x0 x1 x2 x3 x4 x5 : R) :=
  6142348873632193/137438953472 + 1701964360223685/137438953472 * x0
  + -613891491180711/137438953472 * x1 + -319449607488261/68719476736 * 
  x2 + -663304275262619/137438953472 * x3 + -316411370659277/68719476736 * 
  x4 + -1150285196865815/137438953472 * x5
  + 3831243676359341/68719476736 * x0^2
  + -537120422869151/34359738368 * x0 * x1
  + 1554239795299887/34359738368 * x1^2
  + -1199370168142147/68719476736 * x0 * x2
  + -985366815580789/137438953472 * x1 * x2
  + 6761928961201817/137438953472 * x2^2
  + -1391984382164647/68719476736 * x0 * x3
  + -455069042524069/68719476736 * x1 * x3
  + -441780607437581/68719476736 * x2 * x3
  + 6387144502388935/137438953472 * x3^2
  + -1239341328358629/68719476736 * x0 * x4
  + -239486614046239/34359738368 * x1 * x4
  + -492970841646117/68719476736 * x2 * x4
  + -930082479716333/137438953472 * x3 * x4
  + 3238966210436487/68719476736 * x4^2
  + -4904736085609535/137438953472 * x0 * x5
  + -2579864326837129/137438953472 * x1 * x5
  + -2387353821125893/137438953472 * x2 * x5
  + -1203720555507531/68719476736 * x3 * x5
  + -161886983764209/8589934592 * x4 * x5
  + 4109399768317569/137438953472 * x5^2.

Let sigma2 (x0 x1 x2 x3 x4 x5 : R) :=
  771417930199291/17179869184 + -90286382622201/17179869184 * x0
  + 124697190559695/8589934592 * x1 + -307501612653955/68719476736 * 
  x2 + -569699639678963/137438953472 * x3 + -286100326396541/68719476736 * 
  x4 + -63345628485317/8589934592 * x5 + 5111882468487065/137438953472 * 
  x0^2 + -529036907881325/34359738368 * x0 * x1
  + 8359866624466077/137438953472 * x1^2
  + -1510646739999031/137438953472 * x0 * x2
  + -2262981012365/134217728 * x1 * x2 + 6607326050385893/137438953472 * 
  x2^2 + -1613434438171887/137438953472 * x0 * x3
  + -1040382241272983/68719476736 * x1 * x3
  + -492339769039001/68719476736 * x2 * x3
  + 6447774867415891/137438953472 * x3^2
  + -813457827708523/68719476736 * x0 * x4
  + -2046100089285513/137438953472 * x1 * x4
  + -963083542935105/137438953472 * x2 * x4
  + -1023139026696269/137438953472 * x3 * x4
  + 405257967166053/8589934592 * x4^2
  + -1814097526547597/68719476736 * x0 * x5
  + -1995333297107091/68719476736 * x1 * x5
  + -1251685751278727/68719476736 * x2 * x5
  + -314031731822745/17179869184 * x3 * x5
  + -633642193338655/34359738368 * x4 * x5
  + 2053503849642933/68719476736 * x5^2.

Let sigma3 (x0 x1 x2 x3 x4 x5 : R) :=
  6180615350467237/137438953472 + -704925043834969/137438953472 * x0
  + -608043371803825/137438953472 * x1 + 529216382176121/34359738368 * 
  x2 + -132949857873007/34359738368 * x3 + -534491500889835/137438953472 * 
  x4 + -459688038015137/68719476736 * x5
  + 2724367209356649/68719476736 * x0^2
  + -1200809310373153/137438953472 * x0 * x1
  + 3092407642277385/68719476736 * x1^2
  + -1212414991137763/68719476736 * x0 * x2
  + -2365854772423979/137438953472 * x1 * x2
  + 4443039878945147/68719476736 * x2^2
  + -1423712900768783/137438953472 * x0 * x3
  + -247499900970831/34359738368 * x1 * x3
  + -62714333358845/4294967296 * x2 * x3
  + 6525897512108989/137438953472 * x3^2
  + -345966009068927/34359738368 * x0 * x4
  + -501203970707801/68719476736 * x1 * x4
  + -1975025433474731/137438953472 * x2 * x4
  + -444362456232403/68719476736 * x3 * x4
  + 3280281341376103/68719476736 * x4^2
  + -3313323576383447/137438953472 * x0 * x5
  + -1255689962872019/68719476736 * x1 * x5
  + -3720707557571667/137438953472 * x2 * x5
  + -565544392524693/34359738368 * x3 * x5
  + -1149928064141187/68719476736 * x4 * x5
  + 4441811415751057/137438953472 * x5^2.

Let sigma4 (x0 x1 x2 x3 x4 x5 : R) :=
  465587623295057/8589934592 + 913815943469093/137438953472 * x0
  + 4315041551173/1073741824 * x1 + 545266551996675/137438953472 * x2
  + 1657638553801725/68719476736 * x3 + 565653214318193/137438953472 * 
  x4 + 750134847616763/68719476736 * x5 + 1819735705127467/17179869184 * 
  x0^2 + 4610884943641353/137438953472 * x0 * x1
  + 5586909817872501/68719476736 * x1^2
  + 4605550791396049/137438953472 * x0 * x2
  + 1467848402661421/68719476736 * x1 * x2
  + 2784235350745333/34359738368 * x2^2 + 55985664182217/2147483648 * 
  x0 * x3 + 124673093147547/8589934592 * x1 * x3
  + 1970045626999027/137438953472 * x2 * x3
  + 112955473553295/1073741824 * x3^2
  + 2322301615841115/68719476736 * x0 * x4
  + 734222557215313/34359738368 * x1 * x4
  + 367261897400067/17179869184 * x2 * x4
  + 2102276014043251/137438953472 * x3 * x4
  + 2728228339280149/34359738368 * x4^2
  + 787364474364891/8589934592 * x0 * x5
  + 3574918669823751/68719476736 * x1 * x5
  + 442148951719285/8589934592 * x2 * x5
  + 3025184296223163/68719476736 * x3 * x5
  + 1811171265924369/34359738368 * x4 * x5 + 12365152321421/67108864 * 
  x5^2.

Let sigma5 (x0 x1 x2 x3 x4 x5 : R) :=
  3688201481834607/68719476736 + 99141282990835/68719476736 * x0
  + 56972826670649/68719476736 * x1 + 29539862072545/34359738368 * x2
  + 51274983389361/68719476736 * x3 + 2807732407584295/137438953472 * 
  x4 + 11767615592023/4294967296 * x5 + 5238907253224905/68719476736 * 
  x0^2 + 1415368987341259/137438953472 * x0 * x1
  + 1229165704293397/17179869184 * x1^2
  + 761377033243319/68719476736 * x0 * x2
  + 562575733185493/68719476736 * x1 * x2 + 154260941051993/2147483648 * 
  x2^2 + 1302033785234415/137438953472 * x0 * x3
  + 1002503257704921/137438953472 * x1 * x3
  + 130192335264313/17179869184 * x2 * x3
  + 2352645023467005/34359738368 * x3^2
  + 512060294145465/137438953472 * x0 * x4
  + 36021882693913/34359738368 * x1 * x4
  + 78845202369529/68719476736 * x2 * x4
  + 30520104432283/68719476736 * x3 * x4
  + 3300402145914637/34359738368 * x4^2
  + 1418534786429547/68719476736 * x0 * x5
  + 1969066676753505/137438953472 * x1 * x5
  + 1958620297332547/137438953472 * x2 * x5
  + 874380933656863/68719476736 * x3 * x5
  + 449848143498481/68719476736 * x4 * x5
  + 6352969570662519/68719476736 * x5^2.

Let sigma6 (x0 x1 x2 x3 x4 x5 : R) :=
  2724987766198401/137438953472 + -255498960039149/68719476736 * x0
  + -217890910665247/68719476736 * x1 + -209890579312573/68719476736 * 
  x2 + -199605120857979/68719476736 * x3 + -204297848381911/68719476736 * 
  x4 + 851883407069741/137438953472 * x5
  + 2665119616036791/137438953472 * x0^2
  + -28695585756269/34359738368 * x0 * x1
  + 2978497361196117/137438953472 * x1^2
  + -54417633141071/68719476736 * x0 * x2
  + 27507498240035/34359738368 * x1 * x2 + 758880606218765/34359738368 * 
  x2^2 + -109763199905995/68719476736 * x0 * x3
  + -4850219693/1073741824 * x1 * x3 + 8526809825305/68719476736 * x2 * x3
  + 2825811364833761/137438953472 * x3^2
  + -95186855488795/68719476736 * x0 * x4
  + -10451719629699/68719476736 * x1 * x4
  + 12074554579647/68719476736 * x2 * x4
  + -2915365592829/8589934592 * x3 * x4
  + 2847556143665237/137438953472 * x4^2
  + -1874360964897389/137438953472 * x0 * x5
  + -187030707746229/17179869184 * x1 * x5
  + -1404007514374313/137438953472 * x2 * x5
  + -734351229737081/68719476736 * x3 * x5
  + -1459351085184059/137438953472 * x4 * x5
  + 2788066943405003/137438953472 * x5^2.

Lemma relax_pos (x0 x1 x2 x3 x4 x5 : R) :
  sigma x0 x1 x2 x3 x4 x5 * p x0 x1 x2 x3 x4 x5
  + sigma' x0 x1 x2 x3 x4 x5 * p' x0 x1 x2 x3 x4 x5
  - sigma1 x0 x1 x2 x3 x4 x5 * b1 x0 x1 x2 x3 x4 x5
  - sigma2 x0 x1 x2 x3 x4 x5 * b2 x0 x1 x2 x3 x4 x5
  - sigma3 x0 x1 x2 x3 x4 x5 * b3 x0 x1 x2 x3 x4 x5
  - sigma4 x0 x1 x2 x3 x4 x5 * b4 x0 x1 x2 x3 x4 x5
  - sigma5 x0 x1 x2 x3 x4 x5 * b5 x0 x1 x2 x3 x4 x5
  - sigma6 x0 x1 x2 x3 x4 x5 * b6 x0 x1 x2 x3 x4 x5 - 1/100000000 >= 0.
Proof.
rewrite /sigma /p /sigma' /p' /sigma1 /b1 /sigma2 /b2 /sigma3 /b3 /sigma4 /b4 /sigma5 /b5 /sigma6 /b6.
validsdp.
Qed.

Lemma sigma_pos (x0 x1 x2 x3 x4 x5 : R) : sigma x0 x1 x2 x3 x4 x5 > 0.
Proof. rewrite /sigma. interval. Qed.

Lemma sigma'_pos (x0 x1 x2 x3 x4 x5 : R) : sigma' x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma'. interval. Qed.

Lemma sigma1_pos (x0 x1 x2 x3 x4 x5 : R) : sigma1 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma1. validsdp. Qed.

Lemma sigma2_pos (x0 x1 x2 x3 x4 x5 : R) : sigma2 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma2. validsdp. Qed.

Lemma sigma3_pos (x0 x1 x2 x3 x4 x5 : R) : sigma3 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma3. validsdp. Qed.

Lemma sigma4_pos (x0 x1 x2 x3 x4 x5 : R) : sigma4 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma4. validsdp. Qed.

Lemma sigma5_pos (x0 x1 x2 x3 x4 x5 : R) : sigma5 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma5. validsdp. Qed.

Lemma sigma6_pos (x0 x1 x2 x3 x4 x5 : R) : sigma6 x0 x1 x2 x3 x4 x5 >= 0.
Proof. rewrite /sigma6. validsdp. Qed.

Lemma var_bounds (x l u : R) : l <= x <= u -> (x - l) * (u - x) >= 0.
Proof.
move=> [Hl Hu].
apply Rle_ge.
by apply Interval_missing.Rmult_le_pos_pos; apply Fcore_Raux.Rle_0_minus.
Qed.

Lemma relax (x y z : R) : x >= 0 -> y >= 0 -> z - x * y > 0 -> z > 0.
Proof.
move=> HX Hy.
apply Rge_gt_trans, Rle_ge.
rewrite -{2}(Rminus_0_r z).
apply Rplus_le_compat_l, Ropp_le_contravar.
by apply Interval_missing.Rmult_le_pos_pos; apply Rge_le.
Qed.
  
Lemma relax' (x y z : R) : x >= 0 -> y <= 0 -> z + x * y > 0 -> z > 0.
Proof.
move=> HX Hy.
apply Rge_gt_trans, Rle_ge.
rewrite -{2}(Rplus_0_r z) Rmult_comm.
by apply Rplus_le_compat_l, Interval_missing.Rmult_le_neg_pos; [|apply Rge_le].
Qed.
  
Theorem p_pos (x0 x1 x2 x3 x4 x5 x6 : R) :
  4 <= x0 <= 63504 / 10000 ->
  4 <= x1 <= 63504 / 10000 ->
  4 <= x2 <= 63504 / 10000 ->
  4 <= x3 <= 4 ->
  4 <= x4 <= 4 ->
  90601 / 10000 <= x5 <= 104721490449 / 10000000000 ->
  (p x0 x1 x2 x3 x4 x5 > 0 \/ p' x0 x1 x2 x3 x4 x5 > 0).
Proof.
move=> H1 H2 H3 H4 H5 H6.
have Hb0 : b1 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb1 : b2 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb2 : b3 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb3 : b4 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb4 : b5 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
have Hb5 : b6 x0 x1 x2 x3 x4 x5 >= 0.
{ by apply var_bounds. }
elim (Rlt_or_le R0 (p' x0 x1 x2 x3 x4 x5))=> Hp'; [by right|].
left.
apply (Rmult_lt_reg_l (sigma x0 x1 x2 x3 x4 x5)); [by apply sigma_pos|].
rewrite Rmult_0_r.
apply (relax' _ _ _ (sigma'_pos x0 x1 x2 x3 x4 x5) Hp').
apply (relax _ _ _ (sigma1_pos x0 x1 x2 x3 x4 x5) Hb0).
apply (relax _ _ _ (sigma2_pos x0 x1 x2 x3 x4 x5) Hb1).
apply (relax _ _ _ (sigma3_pos x0 x1 x2 x3 x4 x5) Hb2).
apply (relax _ _ _ (sigma4_pos x0 x1 x2 x3 x4 x5) Hb3).
apply (relax _ _ _ (sigma5_pos x0 x1 x2 x3 x4 x5) Hb4).
apply (relax _ _ _ (sigma6_pos x0 x1 x2 x3 x4 x5) Hb5).
move: (relax_pos x0 x1 x2 x3 x4 x5).
apply Rgt_ge_trans.
rewrite -{1}(Rplus_0_r (_ - _)).
apply (Rplus_gt_compat_l).
interval.
Qed.
