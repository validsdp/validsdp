Require Import Reals.
Local Open Scope R_scope.
From ValidSDP Require Import validsdp.

(* Attempt to prove that p >= 0 with p below is an
 * inductive invariant, for the program
 *
x1 = rand(0.9, 1.1);
x2 = rand(0, 0.2);
x3 = rand(0, 0.2);
while (-1 <= 0) {
  pre_x1 = x1; pre_x2 = x2; pre_x3 = x3;
  if (x1^2 + x2^2 + x3^2 <= 1) {
    x1 = 0.25 * (0.8 * pre_x1^2 + 1.4 * pre_x2 - 0.5 * pre_x3^2);
    x2 = 0.25 * (1.3 * pre_x1 + 0.5 * pre_x3^2);
    x3 = 0.25 * (1.4 * pre_x2 + 0.8 * pre_x3^2);
  } else {
    x1 = 0.25 * (0.8 * pre_x1 + 0.4 * pre_x2^2);
    x2 = 0.25 * (-0.6 * pre_x2^2 + 0.3 * pre_x3^2);
    x3 = 0.25 * (0.5 * pre_x3 + 0.4 * pre_x1^2);
  }
}
 *)

(* initial condition 0.9 <= x1 <= 1.1 encoded as (x1 - 0.9)*(1.1 - x1) (>= 0) *)
Let pI1 (x0 x1 x2 : R) := (x0 - 9 / 10) * (11 / 10 - x0).
(* initial condition 0 <= x2 <= 0.2 *)
Let pI2 (x0 x1 x2 : R) := x1 * (2 / 10 - x1).
(* initial condition 0 <= x3 <= 0.2 *)
Let pI3 (x0 x1 x2 : R) := x2 * (2 / 10 - x2).
(* guard x1^2 + x2^2 + x3^2 <= 1 (then branch) *)
Let g0 x0 x1 x2 := 1 - (x0^2 + x1^2 + x2^2).
(* assignment in then branch *)
Let t0_x0 (x0 x1 x2 : R) := 1 / 4 * (8 / 10 * x0^2 + 14 / 10 * x1 - 5 / 10 * x2^2).
Let t0_x1 (x0 x1 x2 : R) := 1 / 4 * (13 / 10 * x0^2 + 5 / 10 * x2^2).
Let t0_x2 (x0 x1 x2 : R) := 1 / 4 * (14 / 10 * x1 + 8 / 10 * x2^2).
(* guard x1^2 + x2^2 + x3^2 >= 1 (else branch) *)
Let g1 x0 x1 x2 := (x0^2 + x1^2 + x2^2) - 1.
(* assignment in else branch *)
Let t1_x0 (x0 x1 x2 : R) := 1 / 4 * (8 / 10 * x0 + 4 / 10 * x1^2).
Let t1_x1 (x0 x1 x2 : R) := 1 / 4 * ((-6) / 10 * x1^2 + 3 / 10 * x2^2).
Let t1_x2 (x0 x1 x2 : R) := 1 / 4 * (5 / 10 * x2 + 4 / 10 * x0^2).

Let p x0 x1 x2 :=
  376932522065681012931/295147905179352825856
  + 8509962722502765/295147905179352825856 * x0
  + 4810786678983139/147573952589676412928 * x1
  + 8195275705635465/1180591620717411303424 * x2
  + -5286590888873701/4503599627370496 * x0^2
  + 3142771579399875/36028797018963968 * x0 * x1
  + -591108560874675/281474976710656 * x1^2
  + 1261458973270647/2251799813685248 * x0 * x2
  + 5929053759940775/72057594037927936 * x1 * x2
  + -1259727915632095/562949953421312 * x2^2
  + 1149275400895391/4503599627370496 * x0^3
  + 7285847311712275/18014398509481984 * x0^2 * x1
  + 8440266932050133/18014398509481984 * x0 * x1^2
  + 4371217067606495/36028797018963968 * x1^3
  + -458360830646393/1125899906842624 * x0^2 * x2
  + -2813070140505775/4503599627370496 * x0 * x1 * x2
  + -8737122075031031/72057594037927936 * x1^2 * x2
  + 3341105181056463/4503599627370496 * x0 * x2^2
  + 7431847970290251/18014398509481984 * x1 * x2^2
  + -7134326653543871/288230376151711744 * x2^3
  + -4419035466710003/36028797018963968 * x0^4
  + -3191026702181451/18014398509481984 * x0^3 * x1
  + -8852489850214139/72057594037927936 * x0^2 * x1^2
  + -2762344079633701/36028797018963968 * x0 * x1^3
  + -974190988861453/36028797018963968 * x1^4
  + 4592531851313069/36028797018963968 * x0^3 * x2
  + 1897745899402969/9007199254740992 * x0^2 * x1 * x2
  + 3929173054132589/36028797018963968 * x0 * x1^2 * x2
  + 5952875244748005/288230376151711744 * x1^3 * x2
  + -5462054773810051/36028797018963968 * x0^2 * x2^2
  + -5346287477580991/36028797018963968 * x0 * x1 * x2^2
  + -92562462037723/2251799813685248 * x1^2 * x2^2
  + 8810307269401287/576460752303423488 * x0 * x2^3
  + 3135835432654057/576460752303423488 * x1 * x2^3
  + -569947876840979/288230376151711744 * x2^4.
  
Theorem init (x0 x1 x2 : R) :
  pI1 x0 x1 x2 >= 0 -> pI2 x0 x1 x2 >= 0 -> pI3 x0 x1 x2 >= 0 ->
  p x0 x1 x2 >= 0.
Proof.
unfold pI1, pI2, pI3, p.
validsdp.
Qed.

Theorem ind0 (x0 x1 x2 : R) :
  p x0 x1 x2 >= 0 -> g0 x0 x1 x2 >= 0 -> 
  p (t0_x0 x0 x1 x2) (t0_x1 x0 x1 x2) (t0_x2 x0 x1 x2) >= 0.
Proof.
unfold p, g0, t0_x0, t0_x1, t0_x2.
validsdp.
Qed.

Theorem ind1 (x0 x1 x2 : R) :
  p x0 x1 x2 >= 0 -> g1 x0 x1 x2 >= 0 ->
  p (t1_x0 x0 x1 x2) (t1_x1 x0 x1 x2) (t1_x2 x0 x1 x2) >= 0.
Proof.
unfold p, g1, t1_x0, t1_x1, t1_x2.
validsdp.
Qed.
