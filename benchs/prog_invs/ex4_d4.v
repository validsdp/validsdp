From mathcomp Require Import ssreflect.
Require Import Reals.
From ValidSDP Require Import validsdp.

Local Open Scope R_scope.

(* Attempt to prove that p >= 0 with p below is an
 * inductive invariant, for the program
 *
x1 = rand(0.9, 1.1);
x2 = rand(0, 0.2);
while (-1 <= 0) {
  pre_x1 = x1; pre_x2 = x2;
  if (x1^2 + x2^2 <= 1) {
    x1 = pre_x1^2 + pre_x2^3;
    x2 = pre_x1^3 + pre_x2^2;
  } else {
    x1 = 0.5 * pre_x1^3 + 0.4 * pre_x2^2;
    x2 = -0.6 * pre_x1^2 + 0.3 * pre_x2^2;
  }
}
 *)

(* initial condition 0.9 <= x1 <= 1.1 encoded as (x1 - 0.9)*(1.1 - x1) (>= 0) *)
Let pI1 (x0 x1 : R) := (x0 - 9 / 10) * (11 / 10 - x0).
(* initial condition 0 <= x2 <= 0.2 *)
Let pI2 (x0 x1 : R) := x1 * (2 / 10 - x1).
(* guard x1^2 + x2^2 <= 1 (then branch) *)
Let g0 x0 x1 := 1 - (x0^2 + x1^2).
(* assignment in then branch *)
Let t0_x0 (x0 x1 : R) := x0^2 + x1^3.
Let t0_x1 (x0 x1 : R) := x0^3 + x1^2.
(* guard x1^2 + x2^2 >= 1 (else branch) *)
Let g1 x0 x1 := (x0^2 + x1^2) - 1.
(* assignment in else branch *)
Let t1_x0 (x0 x1 : R) := 5 / 10 * x0^3 + 4 / 10 * x1^2.
Let t1_x1 (x0 x1 : R) := (-6) / 10 * x0^2 + 3 / 10 * x1^2.

Let p x0 x1 :=
  45341764775/2199023255552 + 2543726999988995/576460752303423488 * x0
  + -1432997702740123/4611686018427387904 * x1
  + -6302578343467645/288230376151711744 * x0^2
  + 6245114857897609/1152921504606846976 * x0 * x1
  + -5391003868387453/576460752303423488 * x1^2
  + 6367724791712061/576460752303423488 * x0^3
  + -3595005646773247/288230376151711744 * x0^2 * x1
  + 3726914850232837/288230376151711744 * x0 * x1^2
  + 7525758218067537/288230376151711744 * x1^3
  + -5053053318909601/576460752303423488 * x0^4
  + -8679218943287311/9223372036854775808 * x0^3 * x1
  + 979459393320495/36028797018963968 * x0^2 * x1^2
  + 2667063388576173/1152921504606846976 * x0 * x1^3
  + -1416111155701539/36028797018963968 * x1^4.
  
Let init_sigma1 x0 x1 :=
  5373104421438675/36028797018963968
  + -5459934422871299/72057594037927936 * x0
  + -6798161534085623/1152921504606846976 * x1
  + 2767309701406385/18014398509481984 * x0^2
  + -3736579703585739/288230376151711744 * x0 * x1
  + 7288788766663909/36028797018963968 * x1^2.
  
Let init_sigma2 x0 x1 :=
  3652963530370667/36028797018963968
  + -6334952452670491/36028797018963968 * x0
  + -7914748521065905/288230376151711744 * x1
  + 1534349170857035/18014398509481984 * x0^2
  + -2665524990751133/72057594037927936 * x0 * x1
  + 5321640415654819/18014398509481984 * x1^2.
  
Let ind0_sigma x0 x1 :=
  7177605082843025/36028797018963968
  + -6153769232896267/36028797018963968 * x0
  + -5708956294431213/36028797018963968 * x1
  + 5552099080217001/36028797018963968 * x0^2
  + 858525576474925/576460752303423488 * x0 * x1
  + 3776102071957815/18014398509481984 * x1^2
  + -5883572779649353/36028797018963968 * x0^3
  + 692474002675797/72057594037927936 * x0^2 * x1
  + -4720508628236721/288230376151711744 * x0 * x1^2
  + -6029977786727713/36028797018963968 * x1^3
  + 3074880346472717/18014398509481984 * x0^4
  + 7838794731854123/576460752303423488 * x0^3 * x1
  + 7615956851069791/144115188075855872 * x0^2 * x1^2
  + -8542739456911121/576460752303423488 * x0 * x1^3
  + 1964353587898417/9007199254740992 * x1^4
  + -1182541631485863/9007199254740992 * x0^5
  + 3382801393732131/288230376151711744 * x0^4 * x1
  + -3165680286492005/576460752303423488 * x0^3 * x1^2
  + 7749759421447987/2305843009213693952 * x0^2 * x1^3
  + -3248212329889959/1152921504606846976 * x0 * x1^4
  + -4891413136912467/36028797018963968 * x1^5
  + 2919677334651095/18014398509481984 * x0^6
  + 4624489510022047/576460752303423488 * x0^5 * x1
  + 7673246958897621/144115188075855872 * x0^4 * x1^2
  + 5455121150629785/2305843009213693952 * x0^3 * x1^3
  + 1064324943558883/18014398509481984 * x0^2 * x1^4
  + -8652820215384853/576460752303423488 * x0 * x1^5
  + 6640080590516947/36028797018963968 * x1^6
  + -6303449971029867/72057594037927936 * x0^7
  + 4952327146033127/2305843009213693952 * x0^6 * x1
  + 7870173210062415/2305843009213693952 * x0^5 * x1^2
  + 4625056627025097/576460752303423488 * x0^4 * x1^3
  + 5177833700642787/18446744073709551616 * x0^3 * x1^4
  + 8400733670689375/2305843009213693952 * x0^2 * x1^5
  + -3012950253963505/4611686018427387904 * x0 * x1^6
  + -6027694669876663/72057594037927936 * x1^7
  + 5926064874657251/36028797018963968 * x0^8
  + 2253976209843303/576460752303423488 * x0^7 * x1
  + 398072918514357/4503599627370496 * x0^6 * x1^2
  + 3319014778920177/2305843009213693952 * x0^5 * x1^3
  + 3033119903491345/36028797018963968 * x0^4 * x1^4
  + 3856625114866561/36893488147419103232 * x0^3 * x1^5
  + 6518813104030023/72057594037927936 * x0^2 * x1^6
  + -8402630186802945/1152921504606846976 * x0 * x1^7
  + 1532338433399913/9007199254740992 * x1^8.
  
Let ind0_sigma0 x0 x1 :=
  5430690801213833/576460752303423488
  + 2747091453171281/1152921504606846976 * x0
  + 5342809677692627/2305843009213693952 * x1
  + 3769134586411355/576460752303423488 * x0^2
  + -4722063118253951/9223372036854775808 * x0 * x1
  + 7880489088528455/4611686018427387904 * x1^2
  + -5588390900790847/2305843009213693952 * x0^3
  + 6555275824290457/9223372036854775808 * x0^2 * x1
  + -8458215477499463/2305843009213693952 * x0 * x1^2
  + -5139027454018253/4611686018427387904 * x1^3
  + -6596817974028573/576460752303423488 * x0^4
  + 5685692190076299/9223372036854775808 * x0^3 * x1
  + 5884296998156881/144115188075855872 * x0^2 * x1^2
  + 4709022553994461/1152921504606846976 * x0 * x1^3
  + -5352019348706215/1152921504606846976 * x1^4
  + -6909106159572427/2305843009213693952 * x0^5
  + 3112718825305227/2305843009213693952 * x0^4 * x1
  + -2952148137765397/576460752303423488 * x0^3 * x1^2
  + -8794623302927143/576460752303423488 * x0^2 * x1^3
  + -7216197197653577/1152921504606846976 * x0 * x1^4
  + -1507351953064711/576460752303423488 * x1^5
  + -8446621389892583/288230376151711744 * x0^6
  + -2623312921908585/576460752303423488 * x0^5 * x1
  + 2416373291971147/36028797018963968 * x0^4 * x1^2
  + -3527385933265931/9223372036854775808 * x0^3 * x1^3
  + 5134166518558435/72057594037927936 * x0^2 * x1^4
  + 4027357462004561/2305843009213693952 * x0 * x1^5
  + -6456345456822141/288230376151711744 * x1^6
  + -658218500020521/72057594037927936 * x0^7
  + 5019563588937759/1152921504606846976 * x0^6 * x1
  + 863218999675919/144115188075855872 * x0^5 * x1^2
  + -95726292934723/18014398509481984 * x0^4 * x1^3
  + 8846892232770605/576460752303423488 * x0^3 * x1^4
  + -6926589338361077/576460752303423488 * x0^2 * x1^5
  + -7404518702874735/2305843009213693952 * x0 * x1^6
  + -1326086111026449/2305843009213693952 * x1^7
  + 7177598839652209/576460752303423488 * x0^8
  + -7676391007900223/2305843009213693952 * x0^7 * x1
  + 7766132531984213/72057594037927936 * x0^6 * x1^2
  + -2901690749959759/288230376151711744 * x0^5 * x1^3
  + 7317779496791635/72057594037927936 * x0^4 * x1^4
  + -5261853812013329/1152921504606846976 * x0^3 * x1^5
  + 6963884005118867/72057594037927936 * x0^2 * x1^6
  + 2581208580654629/1152921504606846976 * x0 * x1^7
  + 3145494513290493/2305843009213693952 * x1^8
  + 3891450205056097/1152921504606846976 * x0^9
  + 5502574716247093/9223372036854775808 * x0^8 * x1
  + 7611726081619039/288230376151711744 * x0^7 * x1^2
  + -740986839099011/72057594037927936 * x0^6 * x1^3
  + 8623778516662123/1152921504606846976 * x0^5 * x1^4
  + -4798251153474635/1152921504606846976 * x0^4 * x1^5
  + -2915497066297325/288230376151711744 * x0^3 * x1^6
  + 2286412091994817/576460752303423488 * x0^2 * x1^7
  + -4648394858399081/576460752303423488 * x0 * x1^8
  + 205803309334297/72057594037927936 * x1^9
  + 600860629096951/4503599627370496 * x0^10
  + -620028920174805/576460752303423488 * x0^9 * x1
  + 7529626096723639/72057594037927936 * x0^8 * x1^2
  + -71260844410693/18014398509481984 * x0^7 * x1^3
  + 7055988106131959/72057594037927936 * x0^6 * x1^4
  + 1988528274563043/1152921504606846976 * x0^5 * x1^5
  + 7518339445931611/72057594037927936 * x0^4 * x1^6
  + -2011440769827469/4611686018427387904 * x0^3 * x1^7
  + 7586033712307867/72057594037927936 * x0^2 * x1^8
  + 8449087716238785/9223372036854775808 * x0 * x1^9
  + 8427329404130535/72057594037927936 * x1^10.
  
Let ind1_sigma x0 x1 :=
  7340191608011667/4398046511104 + -5398344764172881/549755813888 * x0
  + -1640106584247177/549755813888 * x1
  + 6954415713090525/274877906944 * x0^2
  + 8947906664654873/549755813888 * x0 * x1
  + 1908955278907981/1099511627776 * x1^2
  + -653192792235181/17179869184 * x0^3
  + -2464277636737505/68719476736 * x0^2 * x1
  + -2679741044658215/274877906944 * x0 * x1^2
  + -668094666862765/1099511627776 * x1^3
  + 2615854470319659/68719476736 * x0^4
  + 339938607037585/8589934592 * x0^3 * x1
  + 5863483628685825/274877906944 * x0^2 * x1^2
  + 4033394886837267/1099511627776 * x0 * x1^3
  + 5480542572193691/35184372088832 * x1^4
  + -7588150034505913/274877906944 * x0^5
  + -719997359789057/34359738368 * x0^4 * x1
  + -6321083893376957/274877906944 * x0^3 * x1^2
  + -8862703559747405/1099511627776 * x0^2 * x1^3
  + -7991305423513999/8796093022208 * x0 * x1^4
  + 2737721354002783/35184372088832 * x1^5
  + 2015995737775301/137438953472 * x0^6
  + 1368857582339449/549755813888 * x0^5 * x1
  + 6768386574212257/549755813888 * x0^4 * x1^2
  + 4596432882756859/549755813888 * x0^3 * x1^3
  + 4090374112274823/2199023255552 * x0^2 * x1^4
  + -2918309651736581/8796093022208 * x0 * x1^5
  + 685773924343965/17592186044416 * x1^6
  + -5591460451726635/1099511627776 * x0^7
  + 4650941186109465/2199023255552 * x0^6 * x1
  + -728369125553193/274877906944 * x0^5 * x1^2
  + -2299717972623627/549755813888 * x0^4 * x1^3
  + -889431533596601/549755813888 * x0^3 * x1^4
  + 7928645020081755/17592186044416 * x0^2 * x1^5
  + -1432165892573065/35184372088832 * x0 * x1^6
  + -5363295398007869/140737488355328 * x1^7
  + 911622905184467/1099511627776 * x0^8
  + -5769177352151035/8796093022208 * x0^7 * x1
  + 3991341927610697/281474976710656 * x0^6 * x1^2
  + 893527755692313/1099511627776 * x0^5 * x1^3
  + 8990446625805863/17592186044416 * x0^4 * x1^4
  + -5932241227000909/35184372088832 * x0^3 * x1^5
  + -6555560590402197/2251799813685248 * x0^2 * x1^6
  + 5426855276157041/1125899906842624 * x0 * x1^7
  + 2606400428713515/140737488355328 * x1^8.
  
Let ind1_sigma1 x0 x1 :=
  2512941843437063/35184372088832 + -6717619970724101/17592186044416 * 
  x0 + -4973225654925233/70368744177664 * x1
  + 8213955390605337/8796093022208 * x0^2
  + 3277707533545139/8796093022208 * x0 * x1
  + -6506731500609847/140737488355328 * x1^2
  + -1535408284955539/1099511627776 * x0^3
  + -7492035066665485/8796093022208 * x0^2 * x1
  + 723131884128835/4398046511104 * x0 * x1^2
  + 5013644426993773/140737488355328 * x1^3
  + 6377913107109233/4398046511104 * x0^4
  + 2376352712034799/2199023255552 * x0^3 * x1
  + -275969287439553/1099511627776 * x0^2 * x1^2
  + -3419367415283203/35184372088832 * x0 * x1^3
  + 2567972612245565/140737488355328 * x1^4
  + -4981092200145279/4398046511104 * x0^5
  + -3505931077450125/4398046511104 * x0^4 * x1
  + 1123421187530863/4398046511104 * x0^3 * x1^2
  + 4031626796076299/70368744177664 * x0^2 * x1^3
  + -5728700868269979/70368744177664 * x0 * x1^4
  + -3505509368852405/281474976710656 * x1^5
  + 3072625284194687/4398046511104 * x0^6
  + 1345225025317965/4398046511104 * x0^5 * x1
  + -8920932007372975/35184372088832 * x0^4 * x1^2
  + 3256282226254977/35184372088832 * x0^3 * x1^3
  + 2846492967100039/17592186044416 * x0^2 * x1^4
  + 1451733550501955/70368744177664 * x0 * x1^5
  + 6712107855575545/562949953421312 * x1^6
  + -751663397041147/2199023255552 * x0^7
  + -7730916932811489/562949953421312 * x0^6 * x1
  + 8429722652320189/35184372088832 * x0^5 * x1^2
  + -6311915749908841/35184372088832 * x0^4 * x1^3
  + -6729171911689007/35184372088832 * x0^3 * x1^4
  + 667254716193875/35184372088832 * x0^2 * x1^5
  + -8027740058171271/281474976710656 * x0 * x1^6
  + -4565250528715729/562949953421312 * x1^7
  + 2205687626817913/17592186044416 * x0^8
  + -701400660122479/17592186044416 * x0^7 * x1
  + -2811582828322725/17592186044416 * x0^6 * x1^2
  + 72972990457031/549755813888 * x0^5 * x1^3
  + 5081775061229877/35184372088832 * x0^4 * x1^4
  + -8303967632798317/140737488355328 * x0^3 * x1^5
  + 2776639910797403/140737488355328 * x0^2 * x1^6
  + 2530150557507841/140737488355328 * x0 * x1^7
  + 4104627184889485/2251799813685248 * x1^8
  + -4258675011354789/140737488355328 * x0^9
  + 4555912672965825/281474976710656 * x0^8 * x1
  + 4311057120223921/70368744177664 * x0^7 * x1^2
  + -6903557520020253/140737488355328 * x0^6 * x1^3
  + -2275879312391417/35184372088832 * x0^5 * x1^4
  + 2885743346942857/70368744177664 * x0^4 * x1^5
  + -1876198857927349/2251799813685248 * x0^3 * x1^6
  + -7245305646870663/562949953421312 * x0^2 * x1^7
  + -3683290260624367/1125899906842624 * x0 * x1^8
  + 1326992548263113/144115188075855872 * x1^9
  + 7997955807292841/2251799813685248 * x0^10
  + -4866310666832975/2251799813685248 * x0^9 * x1
  + -5728369914851291/562949953421312 * x0^8 * x1^2
  + 8394460830840253/1125899906842624 * x0^7 * x1^3
  + 7254962695506677/562949953421312 * x0^6 * x1^4
  + -321867202056869/35184372088832 * x0^5 * x1^5
  + -5283361501244621/2251799813685248 * x0^4 * x1^6
  + 3504245325269429/1125899906842624 * x0^3 * x1^7
  + 3371353575431239/2251799813685248 * x0^2 * x1^8
  + -1987287092648085/9007199254740992 * x0 * x1^9
  + 7101656484108367/72057594037927936 * x1^10.
  
Lemma init_pos (x0 x1 : R) :
  p x0 x1
  - init_sigma1 x0 x1 * pI1 x0 x1
  - init_sigma2 x0 x1 * pI2 x0 x1 >= 0.
Proof.
rewrite /p /init_sigma1 /pI1 /init_sigma2 /pI2.
do_sdp.
Qed.

Lemma init_sigma1_pos (x0 x1 : R) : init_sigma1 x0 x1 >= 0.
Proof. rewrite /init_sigma1. do_sdp. Qed.

Lemma init_sigma2_pos (x0 x1 : R) : init_sigma2 x0 x1 >= 0.
Proof. rewrite /init_sigma2. do_sdp. Qed.

Lemma ind0_pos (x0 x1 : R) :
  p (t0_x0 x0 x1) (t0_x1 x0 x1)
  - ind0_sigma x0 x1 * p x0 x1
  - ind0_sigma0 x0 x1 * g0 x0 x1 >= 0.
Proof.
rewrite /p /t0_x0 /t0_x1 /ind0_sigma /ind0_sigma0 /g0.
do_sdp.
Qed.

Lemma ind0_sigma_pos (x0 x1 : R) : ind0_sigma x0 x1 >= 0.
Proof. rewrite /ind0_sigma. do_sdp. Qed.

Lemma ind0_sigma0_pos (x0 x1 : R) : ind0_sigma0 x0 x1 >= 0.
Proof. rewrite /ind0_sigma0. do_sdp. Qed.

Lemma ind1_pos (x0 x1 : R) :
  p (t1_x0 x0 x1) (t1_x1 x0 x1)
  - ind1_sigma x0 x1 * p x0 x1
  - ind1_sigma1 x0 x1 * g1 x0 x1 >= 0.
Proof.
rewrite /p /t1_x0 /t1_x1 /ind1_sigma /ind1_sigma1 /g1.
do_sdp.
Qed.

Lemma ind1_sigma_pos (x0 x1 : R) : ind1_sigma x0 x1 >= 0.
Proof. rewrite /ind1_sigma. do_sdp. Qed.

Lemma ind1_sigma1_pos (x0 x1 : R) : ind1_sigma1 x0 x1 >= 0.
Proof. rewrite /ind1_sigma1. do_sdp. Qed.

Theorem init (x0 x1 x2 : R) :
  pI1 x0 x1 >= 0 -> pI2 x0 x1 >= 0 ->
  p x0 x1 >= 0.
Proof.
move=> H1 H2.
apply (Rge_trans _ (p x0 x1 - init_sigma1 x0 x1 * pI1 x0 x1)).
{ rewrite -{1}(Rminus_0_r (p _ _)).
  apply Rplus_ge_compat_l, Ropp_ge_contravar.
  by apply Rle_ge, Rmult_le_pos; apply Rge_le; [apply init_sigma1_pos|]. }
apply (Rge_trans _ (p x0 x1 - init_sigma1 x0 x1 * pI1 x0 x1
                    - init_sigma2 x0 x1 * pI2 x0 x1)).
{ rewrite -{1}(Rminus_0_r (_ - _)).
  apply Rplus_ge_compat_l, Ropp_ge_contravar.
  by apply Rle_ge, Rmult_le_pos; apply Rge_le; [apply init_sigma2_pos|]. }
apply init_pos.
Qed.

Theorem ind0 (x0 x1 : R) :
  p x0 x1 >= 0 -> g0 x0 x1 >= 0 -> 
  p (t0_x0 x0 x1) (t0_x1 x0 x1) >= 0.
Proof.
move=> H1 H2.
apply (Rge_trans _ (p (t0_x0 x0 x1) (t0_x1 x0 x1)
                    - ind0_sigma x0 x1 * p x0 x1)).
{ rewrite -{1}(Rminus_0_r (p _ _)).
  apply Rplus_ge_compat_l, Ropp_ge_contravar.
  by apply Rle_ge, Rmult_le_pos; apply Rge_le; [apply ind0_sigma_pos|]. }
apply (Rge_trans _ (p (t0_x0 x0 x1) (t0_x1 x0 x1)
                    - ind0_sigma x0 x1 * p x0 x1
                    - ind0_sigma0 x0 x1 * g0 x0 x1)).
{ rewrite -{1}(Rminus_0_r (_ - _)).
  apply Rplus_ge_compat_l, Ropp_ge_contravar.
  by apply Rle_ge, Rmult_le_pos; apply Rge_le; [apply ind0_sigma0_pos|]. }
apply ind0_pos.
Qed.

Theorem ind1 (x0 x1 : R) :
  p x0 x1 >= 0 -> g1 x0 x1 >= 0 ->
  p (t1_x0 x0 x1) (t1_x1 x0 x1) >= 0.
Proof.
move=> H1 H2.
apply (Rge_trans _ (p (t1_x0 x0 x1) (t1_x1 x0 x1)
                    - ind1_sigma x0 x1 * p x0 x1)).
{ rewrite -{1}(Rminus_0_r (p _ _)).
  apply Rplus_ge_compat_l, Ropp_ge_contravar.
  by apply Rle_ge, Rmult_le_pos; apply Rge_le; [apply ind1_sigma_pos|]. }
apply (Rge_trans _ (p (t1_x0 x0 x1) (t1_x1 x0 x1)
                    - ind1_sigma x0 x1 * p x0 x1
                    - ind1_sigma1 x0 x1 * g1 x0 x1)).
{ rewrite -{1}(Rminus_0_r (_ - _)).
  apply Rplus_ge_compat_l, Ropp_ge_contravar.
  by apply Rle_ge, Rmult_le_pos; apply Rge_le; [apply ind1_sigma1_pos|]. }
apply ind1_pos.
Qed.
