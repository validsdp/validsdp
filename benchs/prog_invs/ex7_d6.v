Require Import Reals.
Local Open Scope R_scope.
From ValidSDP Require Import validsdp.

(* Attempt to prove that p >= 0 with p below is an
 * inductive invariant, for the program
 *
x1 = rand(0.5, 0.7);
x2 = rand(0.5, 0.7);
while (-1 <= 0) {
  pre_x1 = x1; pre_x2 = x2;
  if (x1^2 + x2^2 <= 1) {
    x1 = pre_x1^2 + pre_x2^3;
    x2 = pre_x1^3 + pre_x2^2;
  } else {
    x1 = 0.5 * pre_x1^3 + 0.4 * pre_x2^2;
    x2 = -0.6 * pre_x1^2 + 0.3 * pre_x2^2;
  }
}
 *)

(* initial condition 0.5 <= x1 <= 0.7 encoded as (x1 - 0.5)*(0.7 - x1) (>= 0) *)
Let pI1 (x0 x1 : R) := (x0 - 5 / 10) * (7 / 10 - x0).
(* initial condition 0.5 <= x2 <= 0.7 *)
Let pI2 (x0 x1 : R) := (x1 - 5 / 10) * (7 / 10 - x1).
(* guard x1^2 + x2^2 <= 1 (then branch) *)
Let g0 x0 x1 := 1 - (x0^2 + x1^2).
(* assignment in then branch *)
Let t0_x0 (x0 x1 : R) := x0^2 + x1^3.
Let t0_x1 (x0 x1 : R) := x0^3 + x1^2.
(* guard x1^2 + x2^2 >= 1 (else branch) *)
Let g1 x0 x1 := (x0^2 + x1^2) - 1.
(* assignment in else branch *)
Let t1_x0 (x0 x1 : R) := 5 / 10 * x0^3 + 4 / 10 * x1^2.
Let t1_x1 (x0 x1 : R) := (-6) / 10 * x0^2 + 3 / 10 * x1^2.

Let p x0 x1 :=
  4738216471197271/4503599627370496 + 461486665561107/36028797018963968 * 
  x0 + 2148860567220837/72057594037927936 * x1
  + -8202775146209813/2251799813685248 * x0^2
  + -8626419234253377/4503599627370496 * x0 * x1
  + -7868078000648565/2251799813685248 * x1^2
  + 3921066891027203/1125899906842624 * x0^3
  + 2767544406545225/1125899906842624 * x0^2 * x1
  + 5506010582442379/2251799813685248 * x0 * x1^2
  + 3617072631418827/4503599627370496 * x1^3
  + -138133466777373/70368744177664 * x0^4
  + -8073725813518985/18014398509481984 * x0^3 * x1
  + 5942106187826601/1125899906842624 * x0^2 * x1^2
  + 6784102076241101/2251799813685248 * x0 * x1^3
  + -5823498136032391/36028797018963968 * x1^4
  + 1027144908312917/4503599627370496 * x0^5
  + -4727205476840271/9007199254740992 * x0^4 * x1
  + -5407525212435085/2251799813685248 * x0^3 * x1^2
  + -5224058528371821/2251799813685248 * x0^2 * x1^3
  + -7991748307902929/18014398509481984 * x0 * x1^4
  + 1505099781016865/1125899906842624 * x1^5
  + -4903820959533185/576460752303423488 * x0^6
  + 8376633397351463/288230376151711744 * x0^5 * x1
  + 7978081282562245/144115188075855872 * x0^4 * x1^2
  + -6712614333940499/36028797018963968 * x0^3 * x1^3
  + -3803524531712927/4503599627370496 * x0^2 * x1^4
  + -2951633102464389/2251799813685248 * x0 * x1^5
  + -4574065549448907/4503599627370496 * x1^6.

Theorem init (x0 x1 : R) :
  pI1 x0 x1 >= 0 -> pI2 x0 x1 >= 0 ->
  p x0 x1 >= 0.
Proof.
unfold pI1, pI2, p.
validsdp.
Qed.

Theorem ind0 (x0 x1 : R) :
  p x0 x1 >= 0 -> g0 x0 x1 >= 0 -> 
  p (t0_x0 x0 x1) (t0_x1 x0 x1) >= 0.
Proof.
unfold p, g0, t0_x0, t0_x1.
validsdp.
Qed.

Theorem ind1 (x0 x1 : R) :
  p x0 x1 >= 0 -> g1 x0 x1 >= 0 ->
  p (t1_x0 x0 x1) (t1_x1 x0 x1) >= 0.
Proof.
unfold p, g1, t1_x0, t1_x1.
validsdp.
Qed.
