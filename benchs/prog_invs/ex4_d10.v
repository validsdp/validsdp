Require Import Reals.
Local Open Scope R_scope.
From ValidSDP Require Import validsdp.

(* Attempt to prove that p >= 0 with p below is an
 * inductive invariant, for the program
 *
x1 = rand(0.9, 1.1);
x2 = rand(0, 0.2);
while (-1 <= 0) {
  pre_x1 = x1; pre_x2 = x2;
  if (x1^2 + x2^2 <= 1) {
    x1 = pre_x1^2 + pre_x2^3;
    x2 = pre_x1^3 + pre_x2^2;
  } else {
    x1 = 0.5 * pre_x1^3 + 0.4 * pre_x2^2;
    x2 = -0.6 * pre_x1^2 + 0.3 * pre_x2^2;
  }
}
 *)

(* initial condition 0.9 <= x1 <= 1.1 encoded as (x1 - 0.9)*(1.1 - x1) (>= 0) *)
Let pI1 (x0 x1 : R) := (x0 - 9 / 10) * (11 / 10 - x0).
(* initial condition 0 <= x2 <= 0.2 *)
Let pI2 (x0 x1 : R) := x1 * (2 / 10 - x1).
(* guard x1^2 + x2^2 <= 1 (then branch) *)
Let g0 x0 x1 := 1 - (x0^2 + x1^2).
(* assignment in then branch *)
Let t0_x0 (x0 x1 : R) := x0^2 + x1^3.
Let t0_x1 (x0 x1 : R) := x0^3 + x1^2.
(* guard x1^2 + x2^2 >= 1 (else branch) *)
Let g1 x0 x1 := (x0^2 + x1^2) - 1.
(* assignment in else branch *)
Let t1_x0 (x0 x1 : R) := 5 / 10 * x0^3 + 4 / 10 * x1^2.
Let t1_x1 (x0 x1 : R) := (-6) / 10 * x0^2 + 3 / 10 * x1^2.

Let p x0 x1 :=
  8987395123151517477/4611686018427387904
  + 8893261590519765/9223372036854775808 * x0
  + 2764620085281493/4611686018427387904 * x1
  + -762995180902649/70368744177664 * x0^2
  + 1872606290655735/281474976710656 * x0 * x1
  + -2624126371847389/281474976710656 * x1^2
  + 7265916113715343/281474976710656 * x0^3
  + -7391592181846879/281474976710656 * x0^2 * x1
  + 2208568708068981/140737488355328 * x0 * x1^2
  + 23762819918821/8796093022208 * x1^3
  + -6511460237411829/140737488355328 * x0^4
  + 8722260536783613/281474976710656 * x0^3 * x1
  + 4804234895405367/281474976710656 * x0^2 * x1^2
  + -8577714942801095/281474976710656 * x0 * x1^3
  + -5265023639870085/2251799813685248 * x1^4
  + 8102840114726881/140737488355328 * x0^5
  + -7403973278063863/562949953421312 * x0^4 * x1
  + -1234703206305595/17592186044416 * x0^3 * x1^2
  + 5320134228727747/70368744177664 * x0^2 * x1^3
  + 2251144234924427/281474976710656 * x0 * x1^4
  + 5813201814936653/281474976710656 * x1^5
  + -3044489657079467/70368744177664 * x0^6
  + -8317783909311011/1125899906842624 * x0^5 * x1
  + 5751906116772821/70368744177664 * x0^4 * x1^2
  + -3290472152757389/281474976710656 * x0^3 * x1^3
  + 5668210288991619/281474976710656 * x0^2 * x1^4
  + -4571093218279997/70368744177664 * x0 * x1^5
  + -2939560969780967/281474976710656 * x1^6
  + 683162528700147/35184372088832 * x0^7
  + 1150448355036541/70368744177664 * x0^6 * x1
  + -5072842624796853/140737488355328 * x0^5 * x1^2
  + -5994272696098785/140737488355328 * x0^4 * x1^3
  + -5325320329714693/70368744177664 * x0^3 * x1^4
  + -5553916110642339/281474976710656 * x0^2 * x1^5
  + 4140701801908681/70368744177664 * x0 * x1^6
  + 6220373918645045/281474976710656 * x1^7
  + -2536972496138239/562949953421312 * x0^8
  + -413085040399817/70368744177664 * x0^7 * x1
  + 2711130044901239/562949953421312 * x0^6 * x1^2
  + 1115216018322205/140737488355328 * x0^5 * x1^3
  + 1812191784642595/35184372088832 * x0^4 * x1^4
  + 4863196379112075/70368744177664 * x0^3 * x1^5
  + -4729070977106959/70368744177664 * x0^2 * x1^6
  + -4675542648877751/281474976710656 * x0 * x1^7
  + -4451655391374831/140737488355328 * x1^8
  + 2349038140855955/18014398509481984 * x0^9
  + -5930234904541751/4503599627370496 * x0^8 * x1
  + -2729425669879505/1125899906842624 * x0^7 * x1^2
  + 1978892581265703/1125899906842624 * x0^6 * x1^3
  + -106656830813879/8796093022208 * x0^5 * x1^4
  + -7964610133829439/562949953421312 * x0^4 * x1^5
  + 8873781327449163/281474976710656 * x0^3 * x1^6
  + -6346235944656559/18014398509481984 * x0^2 * x1^7
  + 7159618615161045/140737488355328 * x0 * x1^8
  + 8067193080892351/1125899906842624 * x1^9
  + -699221736208067/288230376151711744 * x0^10
  + 2596308005981341/144115188075855872 * x0^9 * x1
  + -7086473226607205/72057594037927936 * x0^8 * x1^2
  + -2532779168514511/36028797018963968 * x0^7 * x1^3
  + -499753870842093/4503599627370496 * x0^6 * x1^4
  + -1829119921384613/562949953421312 * x0^5 * x1^5
  + 8272286571466563/4503599627370496 * x0^4 * x1^6
  + 5116331882171435/562949953421312 * x0^3 * x1^7
  + -2780756571012153/140737488355328 * x0^2 * x1^8
  + -6752570325684547/562949953421312 * x0 * x1^9
  + -5542696380597103/1125899906842624 * x1^10.
  
Theorem init (x0 x1 : R) :
  pI1 x0 x1 >= 0 -> pI2 x0 x1 >= 0 ->
  p x0 x1 >= 0.
Proof.
unfold pI1, pI2, p.
validsdp.
Qed.

Theorem ind0 (x0 x1 : R) :
  p x0 x1 >= 0 -> g0 x0 x1 >= 0 -> 
  p (t0_x0 x0 x1) (t0_x1 x0 x1) >= 0.
Proof.
unfold p, g0, t0_x0, t0_x1.
validsdp.
Qed.

Theorem ind1 (x0 x1 : R) :
  p x0 x1 >= 0 -> g1 x0 x1 >= 0 ->
  p (t1_x0 x0 x1) (t1_x1 x0 x1) >= 0.
Proof.
unfold p, g1, t1_x0, t1_x1.
validsdp.
Qed.
