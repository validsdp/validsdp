Require Import Reals.
Local Open Scope R_scope.
From ValidSDP Require Import validsdp.

(* Attempt to prove that p >= 0 with p below is an
 * inductive invariant, for the program
 *
x1 = rand(0.9, 1.1);
x2 = rand(0, 0.2);
while (-1 <= 0) {
  pre_x1 = x1; pre_x2 = x2;
  if (x1^2 + x2^2 <= 1) {
    x1 = pre_x1^2 + pre_x2^3;
    x2 = pre_x1^3 + pre_x2^2;
  } else {
    x1 = 0.5 * pre_x1^3 + 0.4 * pre_x2^2;
    x2 = -0.6 * pre_x1^2 + 0.3 * pre_x2^2;
  }
}
 *)

(* initial condition 0.9 <= x1 <= 1.1 encoded as (x1 - 0.9)*(1.1 - x1) (>= 0) *)
Let pI1 (x0 x1 : R) := (x0 - 9 / 10) * (11 / 10 - x0).
(* initial condition 0 <= x2 <= 0.2 *)
Let pI2 (x0 x1 : R) := x1 * (2 / 10 - x1).
(* guard x1^2 + x2^2 <= 1 (then branch) *)
Let g0 x0 x1 := 1 - (x0^2 + x1^2).
(* assignment in then branch *)
Let t0_x0 (x0 x1 : R) := x0^2 + x1^3.
Let t0_x1 (x0 x1 : R) := x0^3 + x1^2.
(* guard x1^2 + x2^2 >= 1 (else branch) *)
Let g1 x0 x1 := (x0^2 + x1^2) - 1.
(* assignment in else branch *)
Let t1_x0 (x0 x1 : R) := 5 / 10 * x0^3 + 4 / 10 * x1^2.
Let t1_x1 (x0 x1 : R) := (-6) / 10 * x0^2 + 3 / 10 * x1^2.

Let p x0 x1 :=
  11724193731320667/9007199254740992
  + 5363509247042945/1152921504606846976 * x0
  + 6697439732049177/576460752303423488 * x1
  + -2538921022898767/1125899906842624 * x0^2
  + -158622508368809/140737488355328 * x0 * x1
  + -2153763193131945/1125899906842624 * x1^2
  + 1261645552858613/562949953421312 * x0^3
  + 6720054296628647/4503599627370496 * x0^2 * x1
  + 2787072307930385/2251799813685248 * x0 * x1^2
  + 8841768526834515/18014398509481984 * x1^3
  + -5548502078413043/4503599627370496 * x0^4
  + -6352973998063161/36028797018963968 * x0^3 * x1
  + 7355223013039007/2251799813685248 * x0^2 * x1^2
  + 7116910381908169/4503599627370496 * x0 * x1^3
  + -575281306133581/2251799813685248 * x1^4
  + 368553632223861/2251799813685248 * x0^5
  + -3554591502428539/9007199254740992 * x0^4 * x1
  + -1808382380122255/1125899906842624 * x0^3 * x1^2
  + -2806808898838291/2251799813685248 * x0^2 * x1^3
  + -36108254505365/9007199254740992 * x0 * x1^4
  + 843150192031495/1125899906842624 * x1^5
  + -8782095016692183/1152921504606846976 * x0^6
  + 6544640190593663/288230376151711744 * x0^5 * x1
  + 3334276451595169/144115188075855872 * x0^4 * x1^2
  + -4918224622344679/36028797018963968 * x0^3 * x1^3
  + -4677603389160537/9007199254740992 * x0^2 * x1^4
  + -1667155699402415/2251799813685248 * x0 * x1^5
  + -4984497334918313/9007199254740992 * x1^6.
  
Theorem init (x0 x1 : R) :
  pI1 x0 x1 >= 0 -> pI2 x0 x1 >= 0 ->
  p x0 x1 >= 0.
Proof.
unfold pI1, pI2, p.
validsdp.
Qed.

Theorem ind0 (x0 x1 : R) :
  p x0 x1 >= 0 -> g0 x0 x1 >= 0 -> 
  p (t0_x0 x0 x1) (t0_x1 x0 x1) >= 0.
Proof.
unfold p, g0, t0_x0, t0_x1.
validsdp.
Qed.

Theorem ind1 (x0 x1 : R) :
  p x0 x1 >= 0 -> g1 x0 x1 >= 0 ->
  p (t1_x0 x0 x1) (t1_x1 x0 x1) >= 0.
Proof.
unfold p, g1, t1_x0, t1_x1.
validsdp.
Qed.
